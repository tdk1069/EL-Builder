<?php
// editor.php
session_start();
require 'auth/db.php';

if (!isset($_SESSION['username'])) {
    header('Location: login.html');
    exit;
}

$areaId = $_GET['id'] ?? '';
if (!$areaId) {
    die('No area specified.');
}

$pdo = require 'auth/db.php';
$stmt = $pdo->prepare("SELECT * FROM areas WHERE id = ? AND username = ?");
$stmt->execute([$areaId, $_SESSION['username']]);
$area = $stmt->fetch();

if (!$area) {
    die('Area not found or access denied.');
}

?><!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Area Designer - <?= htmlspecialchars($area->name) ?></title>
  <link rel="stylesheet" href="style.css">
  <style>
    body { display: flex; font-family: sans-serif; background: #222; color: #eee; }
    #map { flex: 1; padding: 1rem; display: grid; grid-template-columns: repeat(11, 40px); grid-template-rows: repeat(11, 40px); gap: 2px; }
    .room { background: #444; border: 1px solid #888; display: flex; align-items: center; justify-content: center; }
    .current { background: gold; color: black; font-weight: bold; }
    #controls { width: 300px; padding: 1rem; background: #333; border-left: 2px solid #555; }
    button { margin: 2px; }
    label { display: block; margin-top: 10px; }
    .compass {
      display: grid;
      grid-template-columns: 40px 40px 40px;
      grid-template-rows: 40px 40px 40px;
      gap: 2px;
      justify-content: center;
      align-items: center;
    }
    .compass button {
      width: 40px;
      height: 40px;
    }
    .form-group {
      margin-bottom: 10px;
    }
    .form-group input,
    .form-group textarea {
      width: 100%;
      box-sizing: border-box;
    }
  </style>
</head>
<body>
  <div id="map"></div>

  <div id="controls">
    <h3>Editing: <?= htmlspecialchars($area->name) ?></h3>
    <div>
      <strong>Movement</strong>
      <div class="compass">
        <button onclick="move('nw')">NW</button>
        <button onclick="move('n')">N</button>
        <button onclick="move('ne')">NE</button>
        <button onclick="move('w')">W</button>
        <div></div>
        <button onclick="move('e')">E</button>
        <button onclick="move('sw')">SW</button>
        <button onclick="move('s')">S</button>
        <button onclick="move('se')">SE</button>
      </div>
      <div style="margin-top: 10px; text-align: center;">
        <button onclick="move('u')">Up</button>
        <button onclick="move('d')">Down</button>
      </div>
    </div>

    <div class="form-group">
      <label for="shortDesc">Short Description:</label>
      <input type="text" id="shortDesc">
    </div>

    <div class="form-group">
      <label for="longDesc">Long Description:</label>
      <textarea id="longDesc"></textarea>
    </div>

    <div class="form-group">
      <label for="smell">Smell:</label>
      <input type="text" id="smell">
    </div>

    <button onclick="saveRoom()">Save Room</button>
  </div>

<script>
  const areaId = <?= json_encode($areaId) ?>;
  const currentPos = { x: 5, y: 5, z: 0 };
  const rooms = new Map();

  function key(x, y, z) {
    return `${x},${y},${z}`;
  }

  function getOffset(dir) {
    const dirs = {
      n: [0, -1, 0], s: [0, 1, 0],
      e: [1, 0, 0], w: [-1, 0, 0],
      ne: [1, -1, 0], nw: [-1, -1, 0],
      se: [1, 1, 0], sw: [-1, 1, 0],
      u: [0, 0, 1], d: [0, 0, -1]
    };
    return dirs[dir];
  }

  function move(dir) {
    const offset = getOffset(dir);
    if (!offset) return;

    const newX = currentPos.x + offset[0];
    const newY = currentPos.y + offset[1];
    const newZ = currentPos.z + offset[2];
    const k = key(newX, newY, newZ);

    if (!rooms.has(k)) {
      rooms.set(k, {
        x: newX, y: newY, z: newZ,
        short: '', long: '', smell: '',
        exits: [dir]
      });
    }

    currentPos.x = newX;
    currentPos.y = newY;
    currentPos.z = newZ;

    drawMap();
    loadRoom(k);
  }

  function drawMap() {
    const map = document.getElementById('map');
    map.innerHTML = '';

    for (let y = 0; y < 11; y++) {
      for (let x = 0; x < 11; x++) {
        const relX = x - 5;
        const relY = y - 5;
        const mapX = currentPos.x + relX;
        const mapY = currentPos.y + relY;
        const k = key(mapX, mapY, currentPos.z);
        const div = document.createElement('div');
        div.className = 'room';
        if (mapX === currentPos.x && mapY === currentPos.y) div.classList.add('current');
        if (rooms.has(k)) div.style.backgroundColor = '#66a';
        map.appendChild(div);
      }
    }
  }

  function saveRoom() {
    const k = key(currentPos.x, currentPos.y, currentPos.z);
    const room = {
      x: currentPos.x,
      y: currentPos.y,
      z: currentPos.z,
      area_id: areaId,
      short: document.getElementById('shortDesc').value,
      long: document.getElementById('longDesc').value,
      smell: document.getElementById('smell').value
    };
    rooms.set(k, room);

    // TODO: Send to backend (save_room.php)
    console.log('Saving room:', room);
  }

  function loadRoom(k) {
    const room = rooms.get(k);
    if (room) {
      document.getElementById('shortDesc').value = room.short || '';
      document.getElementById('longDesc').value = room.long || '';
      document.getElementById('smell').value = room.smell || '';
    } else {
      document.getElementById('shortDesc').value = '';
      document.getElementById('longDesc').value = '';
      document.getElementById('smell').value = '';
    }
  }

  // Add starting room
  const startKey = key(currentPos.x, currentPos.y, currentPos.z);
  rooms.set(startKey, { x: currentPos.x, y: currentPos.y, z: currentPos.z });

  drawMap();
  loadRoom(startKey);
</script>

</body>
</html>
